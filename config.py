# Хост и порт, по которым будет принимать соединения сервер
HOST = '0.0.0.0'
PORT = 2775

# Число воркеров (выделенных процессов, обрабатывающих запросы)
WORKERS_COUNT = 2

# Провайдер бэкенда отправки сообщений
import smpp.external.logging
EXTERNAL_PROVIDER = smpp.external.logging.Provider(file_path="container/sms.txt")
# Необходимо реализовать класс с таким же интерфейсом как у external.base.Provider
# и соответствующим поведением.

# Настройки логгирования
import logging
logging.basicConfig(level=logging.DEBUG)

# Шаблон файла сокета воркера
WORKER_SOCKET_TEMPLATE = '/tmp/smpp_server_{port}_worker_{i}.sock'
# Каждый воркер выделяет себе файл сокета, чтобы принимать данные от мастера.
# Править этот параметр обычно не нужно.

# Первый порт сервера очереди входящий сообщений
INCOMING_MESSAGES_QUEUE_BASE_PORT = 25555
# Каждый воркер запускает такой сервер, чтобы публиковать туда отчеты о доставке.
# Воркеры подписываются на очереди друг друга, чтобы отправлять отчеты
# в известные им соединения указанного клиента.
# Первый воркер займет порт, указанный в этом параметре. Второй воркер займет
# следующий порт (+1). Соответственно, при значении параметра 25555 четыре воркера
# займут порты 25555, 25556, 25557 и 25558.
# Править этот параметр необязательно: только если необходимые порты уже заняты.
